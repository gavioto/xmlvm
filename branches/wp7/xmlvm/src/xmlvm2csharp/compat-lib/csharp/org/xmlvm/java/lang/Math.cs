// Automatically generated by xmlvm2csharp. Do not edit!

using org.xmlvm;
using java = org.xmlvm.java;
namespace org.xmlvm.java.lang {
public class Math: java.lang.Object {
public new void @this(){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math: void <init>()]
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math: void <init>()]
}

public static int max(int n1, int n2){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math: int max(int, int)]
    return global::System.Math.Max(n1, n2);
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math: int max(int, int)]
}

public static int min(int n1, int n2){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math: int min(int, int)]
    return global::System.Math.Min(n1, n2);
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math: int min(int, int)]
}

public static float abs(float n1){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math: float abs(float)]
    return global::System.Math.Abs(n1);
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math: float abs(float)]
}

public static int abs(int n1){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math: int abs(int)]
    return global::System.Math.Abs(n1);
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math: int abs(int)]
}

public static float max(float n1, float n2){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math: float max(float, float)]
    return global::System.Math.Max(n1, n2);
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math: float max(float, float)]
}

//XMLVM_BEGIN_WRAPPER[org.xmlvm.java.lang.Math]
private static global::System.Random gen = new global::System.Random((int)global::System.DateTime.Now.Ticks);

public static double random()
{
    return gen.NextDouble();
}
//XMLVM_END_WRAPPER[org.xmlvm.java.lang.Math]

} // end of class: Math

} // end of namespace: org.xmlvm.java.lang
